{"version":3,"file":"maps.bundle.js","sources":["../src/components/svgMarker.js","../src/components/options.js","../src/components/createMap.js","../src/components/defineCenter.js","../src/components/searchBox.js","../src/components/createSearchBox.js","../src/components/fetchData.js","../src/components/maps.js","../src/index.js"],"sourcesContent":["// Cluster markers SVG\r\nconst Symbol = (id, width, height, fill) => {\r\n  const marker_svg = {\r\n    marker: {\r\n      p: 'M244.31,0C256.87,2.49,269.59,4.38,282,7.58c35.11,9.1,65.15,27.29,90.44,53.07C401.19,90,419.56,125,427,165.51q12.58,68.25-18.92,130.11Q319.47,469.54,230.64,643.36c-.73,1.42-1.59,2.78-2.79,4.87-1.41-2.43-2.5-4.14-3.42-5.93C165.11,526,104.62,410.27,46.93,293.17,8.94,216.08,18.43,141.32,71.6,74c34-43,80.17-66.6,134.87-72.86A44.62,44.62,0,0,0,211.37,0Z',\r\n      v: '0 0 430.62 648.23'\r\n    }\r\n  };\r\n  return ('data:image/svg+xml;base64,' + window.btoa('<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"' + height + '\" viewBox=\"0 0 430.62 648.23\" width=\"' + width + '\" ><g><path fill=\"' + fill + '\" d=\"' + marker_svg[id].p + '\" /></g></svg>'));\r\n};\r\n\r\nexport default Symbol;","import Symbol from './svgMarker';\r\n\r\n// Icon\r\nlet icon = {\r\n  url: Symbol('marker', 25, 25, '#f16667'),\r\n  size: new google.maps.Size(71, 71),\r\n  origin: new google.maps.Point(0, 0),\r\n  anchor: new google.maps.Point(17, 34),\r\n  scaledSize: new google.maps.Size(25, 25)\r\n};\r\n\r\n// Map options\r\nlet mapOptions = {\r\n  zoom: 4,\r\n  center: null,\r\n  mapTypeId: google.maps.MapTypeId.ROADMAP\r\n};\r\n\r\n// Cluster markers style\r\nconst clusterStyles = [\r\n  {\r\n    anchor: [13, 35],\r\n    textColor: 'white',\r\n    textSize: '16',\r\n    url: Symbol('marker', 75, 75, '#f16667'),\r\n    height: 75,\r\n    width: 75\r\n  },\r\n  {\r\n    anchor: [20, 42],\r\n    textColor: 'white',\r\n    textSize: '18',\r\n    url: Symbol('marker', 100, 100, '#f16667'),\r\n    height: 100,\r\n    width: 100\r\n  },\r\n  {\r\n    anchor: [20, 43.5],\r\n    textColor: 'white',\r\n    textSize: '24',\r\n    url: Symbol('marker', 125, 125, '#f16667'),\r\n    height: 125,\r\n    width: 125\r\n  }\r\n];\r\n\r\n// Cluster options\r\nconst clusterOptions = {\r\n  maxZoom: 15,\r\n  gridSize: 75,\r\n  styles: clusterStyles\r\n};\r\n\r\n// Set new icon\r\nconst setIcon = (newIcon) => {\r\n  icon = newIcon;\r\n  return icon\r\n};\r\n\r\nconst addCenterToOptions = (center) => {\r\n  mapOptions.center = center;\r\n};\r\n\r\nexport {\r\n  icon,\r\n  mapOptions,\r\n  clusterOptions,\r\n  setIcon,\r\n  addCenterToOptions\r\n}","import {mapOptions} from './options';\r\n\r\nconst createMap = () => new google.maps.Map(document.getElementById(\"map\"), mapOptions);\r\n\r\nexport default createMap;\r\n\r\n","const defineCenter = (lat, lng) => new google.maps.LatLng(parseFloat(lat).toFixed(6), parseFloat(lng).toFixed(6));\r\n\r\nexport default defineCenter;\r\n","const searchBox = (map, places, sBox, placeMarkers, icon, setIcon) => {\r\n\r\n  let sbMap = map;\r\n  // Bias searchbox results towards current map's viewport\r\n  sbMap.addListener('bounds_changed', function() {\r\n    sBox.setBounds(sbMap.getBounds());\r\n  });\r\n\r\n  // Listen for the event fired when the user selects a prediction and retrieve\r\n  // more details for that place.\r\n  sBox.addListener('places_changed', function() {\r\n    places = searchBox.getPlaces();\r\n    if (places.length == 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear out the old markers.\r\n    placeMarkers.forEach(function(marker) {\r\n      marker.setMap(null);\r\n    });\r\n    placeMarkers = [];\r\n\r\n    // For each place, get the icon, name and location.\r\n    let bounds = new google.maps.LatLngBounds();\r\n    places.forEach(function(place) {\r\n      if (!place.geometry) {\r\n        console.log(\"Returned place contains no geometry\");\r\n        return;\r\n      }\r\n\r\n      let newIcon = {\r\n        url: place.icon,\r\n        size: icon.size,\r\n        origin: icon.origin,\r\n        anchor: icon.anchor,\r\n        scaledSize: icon.scaledSize\r\n      };\r\n\r\n      let otherIcon = setIcon(newIcon);\r\n\r\n      placeMarkers.push(new google.maps.Marker({\r\n        map: sbMap,\r\n        icon: otherIcon,\r\n        title: place.name,\r\n        position: place.geometry.location,\r\n        setMap: sbMap\r\n      }));\r\n\r\n      if (place.geometry.viewport) {\r\n        // Only geocodes have viewport.\r\n        bounds.union(place.geometry.viewport);\r\n      } else {\r\n        bounds.extend(place.geometry.location);\r\n      }\r\n    });\r\n    sbMap.fitBounds(bounds);\r\n  });\r\n};\r\nexport default searchBox;","const createSearchBox = (map) => {\r\n  let localMap = map;\r\n  // Create search box and link it to UI\r\n  const input = document.getElementById('pac-input');\r\n  localMap.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\r\n  const searchBox = new google.maps.places.SearchBox(input);\r\n\r\n  return searchBox;\r\n};\r\n\r\nexport default createSearchBox;\r\n","import {icon, clusterOptions} from './options';\r\n\r\nconst getData = (map, data, markers) => {\r\n  let localMap = map;\r\n  let localData = typeof data !== \"string\" ? \"/datasets/\" + data.toString() : \"/datasets/\" + data;\r\n\r\n  if(isJSON(localData)) {\r\n    fetch(localData)\r\n      .then((response) => response.json())\r\n      .then(function (dataset) {\r\n        // not to confuse 'map' as in array.proptype.map below with an instance of a google map\r\n        // add locations\r\n        dataset.map((markerPosition) => {\r\n          if (!markerPosition.latitude || !markerPosition.longitude) {\r\n            console.log('meh');\r\n          }\r\n          else {\r\n            let location = new google.maps.LatLng({lat: markerPosition.latitude, lng: markerPosition.longitude});\r\n\r\n            const marker = new google.maps.Marker({\r\n              position: location,\r\n              map: localMap,\r\n              icon: icon\r\n            });\r\n            markers.push(marker);\r\n          }\r\n        });\r\n      // create MarkerClusterer\r\n      const markerCluster = new MarkerClusterer(localMap, markers, clusterOptions);\r\n    })\r\n    .catch((err) => {\r\n      if (err) throw err\r\n    });\r\n  }\r\n};\r\n\r\nconst isJSON = (dataset) => {\r\n  try {\r\n    JSON.stringify(dataset);\r\n    return true;\r\n  }\r\n  catch(err) {\r\n    console.error('Data is not JSON format!');\r\n    return false;\r\n  }\r\n};\r\nexport default getData;","import createMap from './createMap';\nimport defineCenter from './defineCenter';\nimport searchBox from './searchBox';\nimport createSearchBox from './createSearchBox';\nimport fetchData from './fetchData';\nimport setGoogleMaps from './setGoogleMaps';\nimport {\n  icon,\n  mapOptions,\n  clusterOptions,\n  setIcon,\n  addCenterToOptions\n} from './options';\n\n// Map center\nconst london = defineCenter(51.521723, -0.134581);\naddCenterToOptions(london);\n\n// Map\nlet map = createMap();\n\n// Search Box\nconst sBox = createSearchBox(map);\n\n// Places markers\nlet placeMarkers = [];\n\n// Places holder\nlet places;\n\n// Markers holder\nlet markers = [];\n\nconst initialize = (data) => {\n  // fetch dataset\n  fetchData(map, data, markers);\n  \n  // Create Search Box\n  searchBox(map, places, sBox, placeMarkers, icon, setIcon);\n};\n\nexport default initialize;","// Import styles (injected into head)\r\n\r\n// Import modules\r\nimport setGoogleMaps from './components/setGoogleMaps';\r\nimport initialize from './components/maps';\r\n\r\nwindow.document.body.onload = addElement;\r\n\r\nfunction addElement () {\r\n  // create map div\r\n  // let mapDiv        = document.createElement('div');\r\n  //     mapDiv.id     = 'map';\r\n\r\n  // create search box input\r\n  // let searchBox             = document.createElement('input');\r\n  //     searchBox.id          = 'pac-input';\r\n  //     searchBox.type        = 'text';\r\n  //     searchBox.placeholder = 'Search Box';\r\n\r\n  let element           = document.createElement('script');\r\n      element.innerHTML = initialize(\"coordinates.json\");\r\n\r\n  // add the newly created element and its content into the DOM\r\n  let currentTag = document.getElementById(\"title\");\r\n\r\n\r\n}\r\ngoogle.maps.event.addDomListener(window, \"load\", addElement);\r\n"],"names":["Symbol","id","width","height","fill","marker_svg","window","btoa","p","icon","google","maps","Size","Point","mapOptions","MapTypeId","ROADMAP","clusterStyles","clusterOptions","setIcon","newIcon","addCenterToOptions","center","createMap","Map","document","getElementById","defineCenter","lat","lng","LatLng","parseFloat","toFixed","searchBox","map","places","sBox","placeMarkers","sbMap","addListener","setBounds","getBounds","getPlaces","length","forEach","marker","setMap","bounds","LatLngBounds","place","geometry","log","size","origin","anchor","scaledSize","otherIcon","push","Marker","name","location","viewport","union","extend","fitBounds","createSearchBox","localMap","input","controls","ControlPosition","TOP_LEFT","SearchBox","getData","data","markers","localData","toString","isJSON","then","response","json","dataset","markerPosition","latitude","longitude","markerCluster","MarkerClusterer","catch","err","stringify","error","london","initialize","body","onload","addElement","element","createElement","innerHTML","currentTag","event","addDomListener"],"mappings":"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"}